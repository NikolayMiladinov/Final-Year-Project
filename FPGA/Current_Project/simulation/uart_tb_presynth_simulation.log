# Reading C:/Microsemi/Libero_SoC_v11.9/Modelsim/tcl/vsim/pref.tcl
# do run.do
# INFO: Simulation library presynth already exists
# Model Technology ModelSim Microsemi vmap 10.5c Lib Mapping Utility 2016.07 Jul 21 2016
# vmap presynth presynth 
# Modifying modelsim.ini
# Model Technology ModelSim Microsemi vmap 10.5c Lib Mapping Utility 2016.07 Jul 21 2016
# vmap igloo C:/Microsemi/Libero_SoC_v11.9/Designer/lib/modelsim/precompiled/vlog/igloo 
# Modifying modelsim.ini
# Model Technology ModelSim Microsemi vlog 10.5c Compiler 2016.07 Jul 21 2016
# Start time: 17:58:47 on Mar 13,2023
# vlog -reportprogress 300 -sv -work presynth C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/component/work/UART_CORE/UART_CORE_0/rtl/vlog/core/Clock_gen.v 
# -- Compiling module UART_CORE_UART_CORE_0_Clock_gen
# 
# Top level modules:
# 	UART_CORE_UART_CORE_0_Clock_gen
# End time: 17:58:47 on Mar 13,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim Microsemi vlog 10.5c Compiler 2016.07 Jul 21 2016
# Start time: 17:58:47 on Mar 13,2023
# vlog -reportprogress 300 -sv -work presynth C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/component/work/UART_CORE/UART_CORE_0/rtl/vlog/core/Rx_async.v 
# -- Compiling module UART_CORE_UART_CORE_0_Rx_async
# 
# Top level modules:
# 	UART_CORE_UART_CORE_0_Rx_async
# End time: 17:58:47 on Mar 13,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim Microsemi vlog 10.5c Compiler 2016.07 Jul 21 2016
# Start time: 17:58:47 on Mar 13,2023
# vlog -reportprogress 300 -sv -work presynth C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/component/work/UART_CORE/UART_CORE_0/rtl/vlog/core/Tx_async.v 
# -- Compiling module UART_CORE_UART_CORE_0_Tx_async
# 
# Top level modules:
# 	UART_CORE_UART_CORE_0_Tx_async
# End time: 17:58:47 on Mar 13,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim Microsemi vlog 10.5c Compiler 2016.07 Jul 21 2016
# Start time: 17:58:47 on Mar 13,2023
# vlog -reportprogress 300 -sv -work presynth C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/component/work/UART_CORE/UART_CORE_0/rtl/vlog/core/fifo_256x8_igloo.v 
# -- Compiling module UART_CORE_UART_CORE_0_fifo_256x8
# -- Compiling module UART_CORE_UART_CORE_0_fifo_256x8_pa3
# 
# Top level modules:
# 	UART_CORE_UART_CORE_0_fifo_256x8
# End time: 17:58:47 on Mar 13,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim Microsemi vlog 10.5c Compiler 2016.07 Jul 21 2016
# Start time: 17:58:47 on Mar 13,2023
# vlog -reportprogress 300 -sv -work presynth C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/component/work/UART_CORE/UART_CORE_0/rtl/vlog/core/CoreUART.v 
# -- Compiling module UART_CORE_UART_CORE_0_COREUART
# 
# Top level modules:
# 	UART_CORE_UART_CORE_0_COREUART
# End time: 17:58:47 on Mar 13,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim Microsemi vlog 10.5c Compiler 2016.07 Jul 21 2016
# Start time: 17:58:47 on Mar 13,2023
# vlog -reportprogress 300 -sv -work presynth C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/component/work/UART_CORE/UART_CORE.v 
# -- Compiling module UART_CORE
# 
# Top level modules:
# 	UART_CORE
# End time: 17:58:47 on Mar 13,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# Model Technology ModelSim Microsemi vlog 10.5c Compiler 2016.07 Jul 21 2016
# Start time: 17:58:47 on Mar 13,2023
# vlog -reportprogress 300 "+incdir+C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/stimulus" -sv -work presynth C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/stimulus/uart_tb.v 
# -- Compiling module uart_tb
# 
# Top level modules:
# 	uart_tb
# End time: 17:58:47 on Mar 13,2023, Elapsed time: 0:00:00
# Errors: 0, Warnings: 0
# vsim -L igloo -L presynth -t 1ps presynth.uart_tb 
# Start time: 17:58:47 on Mar 13,2023
# //  ModelSim Microsemi 10.5c Jul 21 2016
# //
# //  Copyright 1991-2016 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  ModelSim Microsemi and its associated documentation contain trade
# //  secrets and commercial or financial information that are the property of
# //  Mentor Graphics Corporation and are privileged, confidential,
# //  and exempt from disclosure under the Freedom of Information Act,
# //  5 U.S.C. Section 552. Furthermore, this information
# //  is prohibited from disclosure under the Trade Secrets Act,
# //  18 U.S.C. Section 1905.
# //
# Loading sv_std.std
# Loading presynth.uart_tb
# Loading presynth.UART_CORE_UART_CORE_0_COREUART
# Loading presynth.UART_CORE_UART_CORE_0_Clock_gen
# Loading presynth.UART_CORE_UART_CORE_0_Tx_async
# Loading presynth.UART_CORE_UART_CORE_0_Rx_async
# ** Warning: (vsim-WLF-5000) WLF file currently in use: vsim.wlf
#           File in use by: nikol  Hostname: XPS-NICK  ProcessID: 16412
#           Attempting to use alternate WLF file "./wlft2h74ft".
# ** Warning: (vsim-WLF-5001) Could not open WLF file: vsim.wlf
#           Using alternate file: ./wlft2h74ft
# Actel UART Testbench  v3.00 
# --------------------------------------
#  
# Applying Reset
# Setting UART1 Operating Mode 8 bit, parity enabled, and even parity
# Setting UART2 Operating Mode 8 bit, parity enabled, and even parity
# Testing Continuous Data Stream UART1 to UART2
restart -f
run -all
# Actel UART Testbench  v3.00 
# --------------------------------------
#  
# Applying Reset
# Setting UART1 Operating Mode 8 bit, parity enabled, and even parity
# Setting UART2 Operating Mode 8 bit, parity enabled, and even parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 8 bit, parity enabled, and odd parity
# Setting UART2 Operating Mode 8 bit, parity enabled, and odd parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity enabled, and even parity
# Setting UART2 Operating Mode 7 bit, parity enabled, and even parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity enabled, and odd parity
# Setting UART2 Operating Mode 7 bit, parity enabled, and odd parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 8 bit, parity disabled
# Setting UART2 Operating Mode 8 bit, parity disabled
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity disabled
# Setting UART2 Operating Mode 7 bit, parity disabled
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and even parity
# Setting UART2 8bit, parity enabled, and odd parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and even parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 7bit, parity enabled, and even parity
# Setting UART2 7bit, parity enabled, and odd parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 7bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and even parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and odd parity
# Testing for RX data overflow
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Clearing out FIFO for next test
# Framing Error Test
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# END OF SIMULATION
# ALL TESTS ARE PASSED
# ** Note: $stop    : C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/stimulus/uart_tb.v(1250)
#    Time: 54661035 ns  Iteration: 1  Instance: /uart_tb
# Break in NamedBeginStat xhdl_7 at C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/stimulus/uart_tb.v line 1250
add wave -position insertpoint sim:/uart_tb/make_UART1/*
restart -f
run -all
# Actel UART Testbench  v3.00 
# --------------------------------------
#  
# Applying Reset
# Setting UART1 Operating Mode 8 bit, parity enabled, and even parity
# Setting UART2 Operating Mode 8 bit, parity enabled, and even parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 8 bit, parity enabled, and odd parity
# Setting UART2 Operating Mode 8 bit, parity enabled, and odd parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity enabled, and even parity
# Setting UART2 Operating Mode 7 bit, parity enabled, and even parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity enabled, and odd parity
# Setting UART2 Operating Mode 7 bit, parity enabled, and odd parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 8 bit, parity disabled
# Setting UART2 Operating Mode 8 bit, parity disabled
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity disabled
# Setting UART2 Operating Mode 7 bit, parity disabled
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and even parity
# Setting UART2 8bit, parity enabled, and odd parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and even parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 7bit, parity enabled, and even parity
# Setting UART2 7bit, parity enabled, and odd parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 7bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and even parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and odd parity
# Testing for RX data overflow
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Clearing out FIFO for next test
# Framing Error Test
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# END OF SIMULATION
# ALL TESTS ARE PASSED
# ** Note: $stop    : C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/stimulus/uart_tb.v(1250)
#    Time: 54661035 ns  Iteration: 1  Instance: /uart_tb
# Break in NamedBeginStat xhdl_7 at C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/stimulus/uart_tb.v line 1250
add wave -position insertpoint sim:/uart_tb/make_UART2/*
restart -f
run -all
# Actel UART Testbench  v3.00 
# --------------------------------------
#  
# Applying Reset
# Setting UART1 Operating Mode 8 bit, parity enabled, and even parity
# Setting UART2 Operating Mode 8 bit, parity enabled, and even parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 8 bit, parity enabled, and odd parity
# Setting UART2 Operating Mode 8 bit, parity enabled, and odd parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity enabled, and even parity
# Setting UART2 Operating Mode 7 bit, parity enabled, and even parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity enabled, and odd parity
# Setting UART2 Operating Mode 7 bit, parity enabled, and odd parity
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 8 bit, parity disabled
# Setting UART2 Operating Mode 8 bit, parity disabled
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 Operating Mode 7 bit, parity disabled
# Setting UART2 Operating Mode 7 bit, parity disabled
# Testing Continuous Data Stream UART1 to UART2
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and even parity
# Setting UART2 8bit, parity enabled, and odd parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and even parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 7bit, parity enabled, and even parity
# Setting UART2 7bit, parity enabled, and odd parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 7bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and even parity
# Testing parity error generation
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Setting UART1 8bit, parity enabled, and odd parity
# Setting UART2 8bit, parity enabled, and odd parity
# Testing for RX data overflow
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# Clearing out FIFO for next test
# Framing Error Test
# THIS TEST IS PASSED
# 
# -----------------------------------------------------
# END OF SIMULATION
# ALL TESTS ARE PASSED
# ** Note: $stop    : C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/stimulus/uart_tb.v(1250)
#    Time: 54661035 ns  Iteration: 1  Instance: /uart_tb
# Break in NamedBeginStat xhdl_7 at C:/Users/nikol/Documents/FinalYearProject/Final-Year-Project/FPGA/Current_Project/stimulus/uart_tb.v line 1250
# End time: 11:51:34 on Mar 14,2023, Elapsed time: 17:52:47
# Errors: 0, Warnings: 2
